function w(){}function j(t,n){for(const e in n)t[e]=n[e];return t}function v(t){return t()}function A(){return Object.create(null)}function E(t){t.forEach(v)}function B(t){return typeof t=="function"}function C(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let i;function D(t,n){return t===n?!0:(i||(i=document.createElement("a")),i.href=n,t===i.href)}function F(t){return Object.keys(t).length===0}function m(t,...n){if(t==null){for(const r of n)r(void 0);return w}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function P(t){let n;return m(t,e=>n=e)(),n}function S(t,n,e){t.$$.on_destroy.push(m(n,e))}function U(t,n,e,r){if(t){const o=k(t,n,e,r);return t[0](o)}}function k(t,n,e,r){return t[1]&&r?j(e.ctx.slice(),t[1](r(n))):e.ctx}function G(t,n,e,r){if(t[2]&&r){const o=t[2](r(e));if(n.dirty===void 0)return o;if(typeof o=="object"){const a=[],_=Math.max(n.dirty.length,o.length);for(let s=0;s<_;s+=1)a[s]=n.dirty[s]|o[s];return a}return n.dirty|o}return n.dirty}function H(t,n,e,r,o,a){if(o){const _=k(n,e,r,a);t.p(_,o)}}function I(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let r=0;r<e;r++)n[r]=-1;return n}return-1}function J(t){return t??""}function K(t,n,e){return t.set(e),n}let f;function h(t){f=t}function g(){if(!f)throw new Error("Function called outside component initialization");return f}function L(t){g().$$.on_mount.push(t)}function N(t){g().$$.after_update.push(t)}function Q(t){g().$$.on_destroy.push(t)}const l=[],y=[];let c=[];const p=[],x=Promise.resolve();let b=!1;function q(){b||(b=!0,x.then(z))}function R(){return q(),x}function O(t){c.push(t)}function T(t){p.push(t)}const d=new Set;let u=0;function z(){if(u!==0)return;const t=f;do{try{for(;u<l.length;){const n=l[u];u++,h(n),M(n.$$)}}catch(n){throw l.length=0,u=0,n}for(h(null),l.length=0,u=0;y.length;)y.pop()();for(let n=0;n<c.length;n+=1){const e=c[n];d.has(e)||(d.add(e),e())}c.length=0}while(l.length);for(;p.length;)p.pop()();b=!1,d.clear(),h(t)}function M(t){if(t.fragment!==null){t.update(),E(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function V(t){const n=[],e=[];c.forEach(r=>t.indexOf(r)===-1?n.push(r):e.push(r)),e.forEach(r=>r()),c=n}export{D as A,J as B,Q as C,K as a,y as b,S as c,U as d,G as e,T as f,I as g,N as h,P as i,A as j,z as k,B as l,F as m,w as n,L as o,O as p,V as q,E as r,C as s,R as t,H as u,f as v,h as w,v as x,l as y,q as z};
